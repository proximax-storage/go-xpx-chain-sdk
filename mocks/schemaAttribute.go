// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// schemaAttribute is an autogenerated mock type for the schemaAttribute type
type schemaAttribute struct {
	mock.Mock
}

// serialize provides a mock function with given fields: buffer, position, innerObjectPosition
func (_m *schemaAttribute) serialize(buffer []byte, position uint32, innerObjectPosition uint32) []byte {
	ret := _m.Called(buffer, position, innerObjectPosition)

	var r0 []byte
	if rf, ok := ret.Get(0).(func([]byte, uint32, uint32) []byte); ok {
		r0 = rf(buffer, position, innerObjectPosition)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

type mockConstructorTestingTnewSchemaAttribute interface {
	mock.TestingT
	Cleanup(func())
}

// newSchemaAttribute creates a new instance of schemaAttribute. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newSchemaAttribute(t mockConstructorTestingTnewSchemaAttribute) *schemaAttribute {
	mock := &schemaAttribute{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
