// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	sdk "github.com/proximax-storage/go-xpx-chain-sdk/sdk"
	mock "github.com/stretchr/testify/mock"
)

// MessageInfoMapper is an autogenerated mock type for the MessageInfoMapper type
type MessageInfoMapper struct {
	mock.Mock
}

// MapMessageInfo provides a mock function with given fields: _a0
func (_m *MessageInfoMapper) MapMessageInfo(_a0 []byte) (*sdk.WsMessageInfo, error) {
	ret := _m.Called(_a0)

	var r0 *sdk.WsMessageInfo
	if rf, ok := ret.Get(0).(func([]byte) *sdk.WsMessageInfo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sdk.WsMessageInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMessageInfoMapper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMessageInfoMapper creates a new instance of MessageInfoMapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageInfoMapper(t mockConstructorTestingTNewMessageInfoMapper) *MessageInfoMapper {
	mock := &MessageInfoMapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
